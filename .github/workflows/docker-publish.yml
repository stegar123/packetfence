name: packetfence_deb_package
on:
  push:
    branches: [ "features/inv-73" ]
#    paths:
#      - 'addons/packetfence-perl/**'
      
jobs:
  build_image:
#  build:

    runs-on: test-igor
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3    

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ vars.USER_GITHUB }}
#          password: ${{ secrets.TOKEN_GITHUB }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: packetfence-perl-debian

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: './addons/packetfence-perl'
          push: true
#          load: true
          tags: |
            localhost:5000/packetfence/packetfence-perl-debian:v1.21
            localhost:5000/packetfence/packetfence-perl-debian:latest
          file: ./addons/packetfence-perl/Dockerfile-debian

      - name: Inspect
        run: |
          docker buildx imagetools inspect localhost:5000/packetfence/packetfence-perl-debian:latest
      
      - name: bash-version-ls-la-first
        run: |
          echo "::add-mask::asdfsadf"
          ls -ltr /
          pwd
          ls -ltr ./
          env
          docker image ls

  build_debian_package:
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    needs: build_image
    runs-on: test-igor
    container:
      image: localhost:5000/packetfence/packetfence-perl-debian:latest
      env:
        NODE_ENV: development
      volumes:
        - /tmp/:/mnt/output

    steps:
      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)
      
      - name: sadfasdfsd 
        run: |
          pwd
          ls -ltr ./
          env
          python3 install_cpan.py -d dependencies.csv -vi true 
          ./make_tar_from_source.sh
          


  unit-test:
#    runs-on: nested-${{ github.run_id }}
    needs: ['build_image','build_debian_package']
    runs-on: test-igor
    container:
      image: ubuntu:22.04
      env:
        NODE_ENV: development
      volumes:
        - /tmp/debian/packages/:/mnt
      options: --cpus 1
    steps:
      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)
      
      - name: sadfasdfsd 
        run: |
          ls -la /mnt
          dpkg -i /mnt/packetfence-perl_1.2.1_all.deb